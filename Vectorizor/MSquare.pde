// Do some magic...

void doMarchingSquares(PImage img, float blkPt, int sFactor, String sPath)
{
  byte[] b = toBinary(img, blkPt);

  //  // Print a list of all the points in binary format
  //  for(int i = 0; i < b.length; i++)
  //  {
  //   print(b[i]); 
  //   if(i %img.width == 0){
  //   println("");
  //   }
  //  }

  m = new MarchingSquares(img.width, img.height, b);

  p = m.identifyPerimeter();
  if (p != null) {
    List<Direction> dir = p.getDirections();
 
  PVector writePoint = new PVector(p.getOriginX(), p.getOriginY());

  points = new ArrayList();

  // follow the path generated by the algorithm, add points to array 
  for (int i = 0; i < dir.size(); i++)
  {    
    //println(writePoint);
    points.add(writePoint.get());
    writePoint.x += ((Direction)dir.get(i)).screenX;
    writePoint.y += ((Direction)dir.get(i)).screenY;
  }

  // simplify points list, discard every nth
  sPts = simplifyPath(points, sFactor);

  // draw resulting simplified path
  drawPointArray(sPts, pos);

  // save list to machine readable file format
  //savePointData(sPts, sPath);
   }
}

